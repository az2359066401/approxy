<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vivo.mapper.JobCnnvdXmlMapper">
  <resultMap id="BaseResultMap" type="com.vivo.pojo.JobCnnvdXml">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="vuln_id" jdbcType="VARCHAR" property="vulnId" />
    <result column="published" jdbcType="VARCHAR" property="published" />
    <result column="modified" jdbcType="VARCHAR" property="modified" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="severity" jdbcType="VARCHAR" property="severity" />
    <result column="vuln_type" jdbcType="VARCHAR" property="vulnType" />
    <result column="thrtype" jdbcType="VARCHAR" property="thrtype" />
    <result column="vuln_exploit" jdbcType="VARCHAR" property="vulnExploit" />
    <result column="cve_id" jdbcType="VARCHAR" property="cveId" />
    <result column="bugtraq_id" jdbcType="VARCHAR" property="bugtraqId" />
    <result column="other_id" jdbcType="VARCHAR" property="otherId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.vivo.pojo.JobCnnvdXmlWithBLOBs">
    <result column="vulnerable_configuration" jdbcType="LONGVARCHAR" property="vulnerableConfiguration" />
    <result column="vuln_software_list" jdbcType="LONGVARCHAR" property="vulnSoftwareList" />
    <result column="vuln_descript" jdbcType="LONGVARCHAR" property="vulnDescript" />
    <result column="vuln_solution" jdbcType="LONGVARCHAR" property="vulnSolution" />
    <result column="refs" jdbcType="LONGVARCHAR" property="refs" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, vuln_id, published, modified, source, severity, vuln_type, thrtype, vuln_exploit, 
    cve_id, bugtraq_id, other_id
  </sql>
  <sql id="Blob_Column_List">
    vulnerable_configuration, vuln_software_list, vuln_descript, vuln_solution, refs
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.vivo.pojo.JobCnnvdXmlExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job_cnnvd_xml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.vivo.pojo.JobCnnvdXmlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from job_cnnvd_xml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job_cnnvd_xml
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job_cnnvd_xml
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vivo.pojo.JobCnnvdXmlExample">
    delete from job_cnnvd_xml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vivo.pojo.JobCnnvdXmlWithBLOBs">
    insert into job_cnnvd_xml (id, name, vuln_id, 
      published, modified, source, 
      severity, vuln_type, thrtype, 
      vuln_exploit, cve_id, bugtraq_id, 
      other_id, vulnerable_configuration, vuln_software_list, 
      vuln_descript, vuln_solution, refs
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{vulnId,jdbcType=VARCHAR}, 
      #{published,jdbcType=VARCHAR}, #{modified,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{severity,jdbcType=VARCHAR}, #{vulnType,jdbcType=VARCHAR}, #{thrtype,jdbcType=VARCHAR}, 
      #{vulnExploit,jdbcType=VARCHAR}, #{cveId,jdbcType=VARCHAR}, #{bugtraqId,jdbcType=VARCHAR}, 
      #{otherId,jdbcType=VARCHAR}, #{vulnerableConfiguration,jdbcType=LONGVARCHAR}, #{vulnSoftwareList,jdbcType=LONGVARCHAR}, 
      #{vulnDescript,jdbcType=LONGVARCHAR}, #{vulnSolution,jdbcType=LONGVARCHAR}, #{refs,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vivo.pojo.JobCnnvdXmlWithBLOBs">
    insert into job_cnnvd_xml
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="vulnId != null">
        vuln_id,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="modified != null">
        modified,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="severity != null">
        severity,
      </if>
      <if test="vulnType != null">
        vuln_type,
      </if>
      <if test="thrtype != null">
        thrtype,
      </if>
      <if test="vulnExploit != null">
        vuln_exploit,
      </if>
      <if test="cveId != null">
        cve_id,
      </if>
      <if test="bugtraqId != null">
        bugtraq_id,
      </if>
      <if test="otherId != null">
        other_id,
      </if>
      <if test="vulnerableConfiguration != null">
        vulnerable_configuration,
      </if>
      <if test="vulnSoftwareList != null">
        vuln_software_list,
      </if>
      <if test="vulnDescript != null">
        vuln_descript,
      </if>
      <if test="vulnSolution != null">
        vuln_solution,
      </if>
      <if test="refs != null">
        refs,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="vulnId != null">
        #{vulnId,jdbcType=VARCHAR},
      </if>
      <if test="published != null">
        #{published,jdbcType=VARCHAR},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="severity != null">
        #{severity,jdbcType=VARCHAR},
      </if>
      <if test="vulnType != null">
        #{vulnType,jdbcType=VARCHAR},
      </if>
      <if test="thrtype != null">
        #{thrtype,jdbcType=VARCHAR},
      </if>
      <if test="vulnExploit != null">
        #{vulnExploit,jdbcType=VARCHAR},
      </if>
      <if test="cveId != null">
        #{cveId,jdbcType=VARCHAR},
      </if>
      <if test="bugtraqId != null">
        #{bugtraqId,jdbcType=VARCHAR},
      </if>
      <if test="otherId != null">
        #{otherId,jdbcType=VARCHAR},
      </if>
      <if test="vulnerableConfiguration != null">
        #{vulnerableConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="vulnSoftwareList != null">
        #{vulnSoftwareList,jdbcType=LONGVARCHAR},
      </if>
      <if test="vulnDescript != null">
        #{vulnDescript,jdbcType=LONGVARCHAR},
      </if>
      <if test="vulnSolution != null">
        #{vulnSolution,jdbcType=LONGVARCHAR},
      </if>
      <if test="refs != null">
        #{refs,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vivo.pojo.JobCnnvdXmlExample" resultType="java.lang.Long">
    select count(*) from job_cnnvd_xml
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job_cnnvd_xml
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.vulnId != null">
        vuln_id = #{record.vulnId,jdbcType=VARCHAR},
      </if>
      <if test="record.published != null">
        published = #{record.published,jdbcType=VARCHAR},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.severity != null">
        severity = #{record.severity,jdbcType=VARCHAR},
      </if>
      <if test="record.vulnType != null">
        vuln_type = #{record.vulnType,jdbcType=VARCHAR},
      </if>
      <if test="record.thrtype != null">
        thrtype = #{record.thrtype,jdbcType=VARCHAR},
      </if>
      <if test="record.vulnExploit != null">
        vuln_exploit = #{record.vulnExploit,jdbcType=VARCHAR},
      </if>
      <if test="record.cveId != null">
        cve_id = #{record.cveId,jdbcType=VARCHAR},
      </if>
      <if test="record.bugtraqId != null">
        bugtraq_id = #{record.bugtraqId,jdbcType=VARCHAR},
      </if>
      <if test="record.otherId != null">
        other_id = #{record.otherId,jdbcType=VARCHAR},
      </if>
      <if test="record.vulnerableConfiguration != null">
        vulnerable_configuration = #{record.vulnerableConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.vulnSoftwareList != null">
        vuln_software_list = #{record.vulnSoftwareList,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.vulnDescript != null">
        vuln_descript = #{record.vulnDescript,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.vulnSolution != null">
        vuln_solution = #{record.vulnSolution,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.refs != null">
        refs = #{record.refs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update job_cnnvd_xml
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      vuln_id = #{record.vulnId,jdbcType=VARCHAR},
      published = #{record.published,jdbcType=VARCHAR},
      modified = #{record.modified,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      severity = #{record.severity,jdbcType=VARCHAR},
      vuln_type = #{record.vulnType,jdbcType=VARCHAR},
      thrtype = #{record.thrtype,jdbcType=VARCHAR},
      vuln_exploit = #{record.vulnExploit,jdbcType=VARCHAR},
      cve_id = #{record.cveId,jdbcType=VARCHAR},
      bugtraq_id = #{record.bugtraqId,jdbcType=VARCHAR},
      other_id = #{record.otherId,jdbcType=VARCHAR},
      vulnerable_configuration = #{record.vulnerableConfiguration,jdbcType=LONGVARCHAR},
      vuln_software_list = #{record.vulnSoftwareList,jdbcType=LONGVARCHAR},
      vuln_descript = #{record.vulnDescript,jdbcType=LONGVARCHAR},
      vuln_solution = #{record.vulnSolution,jdbcType=LONGVARCHAR},
      refs = #{record.refs,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job_cnnvd_xml
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      vuln_id = #{record.vulnId,jdbcType=VARCHAR},
      published = #{record.published,jdbcType=VARCHAR},
      modified = #{record.modified,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      severity = #{record.severity,jdbcType=VARCHAR},
      vuln_type = #{record.vulnType,jdbcType=VARCHAR},
      thrtype = #{record.thrtype,jdbcType=VARCHAR},
      vuln_exploit = #{record.vulnExploit,jdbcType=VARCHAR},
      cve_id = #{record.cveId,jdbcType=VARCHAR},
      bugtraq_id = #{record.bugtraqId,jdbcType=VARCHAR},
      other_id = #{record.otherId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vivo.pojo.JobCnnvdXmlWithBLOBs">
    update job_cnnvd_xml
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="vulnId != null">
        vuln_id = #{vulnId,jdbcType=VARCHAR},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=VARCHAR},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="severity != null">
        severity = #{severity,jdbcType=VARCHAR},
      </if>
      <if test="vulnType != null">
        vuln_type = #{vulnType,jdbcType=VARCHAR},
      </if>
      <if test="thrtype != null">
        thrtype = #{thrtype,jdbcType=VARCHAR},
      </if>
      <if test="vulnExploit != null">
        vuln_exploit = #{vulnExploit,jdbcType=VARCHAR},
      </if>
      <if test="cveId != null">
        cve_id = #{cveId,jdbcType=VARCHAR},
      </if>
      <if test="bugtraqId != null">
        bugtraq_id = #{bugtraqId,jdbcType=VARCHAR},
      </if>
      <if test="otherId != null">
        other_id = #{otherId,jdbcType=VARCHAR},
      </if>
      <if test="vulnerableConfiguration != null">
        vulnerable_configuration = #{vulnerableConfiguration,jdbcType=LONGVARCHAR},
      </if>
      <if test="vulnSoftwareList != null">
        vuln_software_list = #{vulnSoftwareList,jdbcType=LONGVARCHAR},
      </if>
      <if test="vulnDescript != null">
        vuln_descript = #{vulnDescript,jdbcType=LONGVARCHAR},
      </if>
      <if test="vulnSolution != null">
        vuln_solution = #{vulnSolution,jdbcType=LONGVARCHAR},
      </if>
      <if test="refs != null">
        refs = #{refs,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vivo.pojo.JobCnnvdXmlWithBLOBs">
    update job_cnnvd_xml
    set name = #{name,jdbcType=VARCHAR},
      vuln_id = #{vulnId,jdbcType=VARCHAR},
      published = #{published,jdbcType=VARCHAR},
      modified = #{modified,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      severity = #{severity,jdbcType=VARCHAR},
      vuln_type = #{vulnType,jdbcType=VARCHAR},
      thrtype = #{thrtype,jdbcType=VARCHAR},
      vuln_exploit = #{vulnExploit,jdbcType=VARCHAR},
      cve_id = #{cveId,jdbcType=VARCHAR},
      bugtraq_id = #{bugtraqId,jdbcType=VARCHAR},
      other_id = #{otherId,jdbcType=VARCHAR},
      vulnerable_configuration = #{vulnerableConfiguration,jdbcType=LONGVARCHAR},
      vuln_software_list = #{vulnSoftwareList,jdbcType=LONGVARCHAR},
      vuln_descript = #{vulnDescript,jdbcType=LONGVARCHAR},
      vuln_solution = #{vulnSolution,jdbcType=LONGVARCHAR},
      refs = #{refs,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vivo.pojo.JobCnnvdXml">
    update job_cnnvd_xml
    set name = #{name,jdbcType=VARCHAR},
      vuln_id = #{vulnId,jdbcType=VARCHAR},
      published = #{published,jdbcType=VARCHAR},
      modified = #{modified,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      severity = #{severity,jdbcType=VARCHAR},
      vuln_type = #{vulnType,jdbcType=VARCHAR},
      thrtype = #{thrtype,jdbcType=VARCHAR},
      vuln_exploit = #{vulnExploit,jdbcType=VARCHAR},
      cve_id = #{cveId,jdbcType=VARCHAR},
      bugtraq_id = #{bugtraqId,jdbcType=VARCHAR},
      other_id = #{otherId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>